{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/Saerch-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,8BAAyBH,EAAMI,QAAQC,GAAvC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJbC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAW,YAAhB,SAEKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLnBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC0CjEG,E,kDAvCb,aAAc,IAAD,8BACX,gBAgBFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAY,IAJH,E,qDAUb,WAAoB,IAAD,OACjBI,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAApB,GAAO,OAAI,EAAKc,SAAS,CAAC,SAAWd,S,oBAS7C,WAAQ,MAEwBuB,KAAKL,MAA7Bb,EAFA,EAEAA,SAASU,EAFT,EAESA,YACTS,EAAiBnB,EAASoB,QAAO,SAAAzB,GAAO,OAC5CA,EAAQE,KAAKwB,cAAcC,SAASZ,EAAYW,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAcc,KAAKd,eAC5D,cAAC,EAAD,CAAUJ,SAAUmB,W,GAnCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e9d2e7e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card = (props) =>(\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`http://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => (\r\n    <div className= 'card-list'>\r\n        {\r\n         props.monsters.map(monster => ( \r\n             <Card key={monster.id} monster={monster}></Card>\r\n         ))\r\n        }\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className=\"search\" type='search' placeholder={placeholder} onChange={handleChange}/>\r\n);","import './App.css';\nimport React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/Saerch-box/search-box.component';\n\nclass App extends Component {\n\n  constructor(){ \n    super();\n    this.state = {\n      monsters: [],\n      searchField:''\n    };\n\n  }\n\n  //react life cycle // fetch json data\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(monster => this.setState({'monsters':monster}));\n  }\n\n  //the 'this' is automatic bind when the arrow function was defined in the first place which is the \"App\" component\n  handleChange= (e) =>{\n    this.setState({searchField : e.target.value});\n  }\n\n\n  render(){\n    //destructor  this code == const monster = this.state.monsters; / const searchField = this.state.searchField;\n    const{monsters,searchField} = this.state;\n    const filterMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange}></SearchBox>\n        <CardList monsters={filterMonsters}></CardList>       \n    </div>\n    );\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}